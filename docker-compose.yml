services:
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 10
        window: 120s
      resources:
        limits:
          memory: 250MB
          cpus: '1'
        reservations:
          memory: 50MB
          cpus: '0.10'
    networks:
      - monitoring
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.systemd'
      - '--collector.processes'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 10
        window: 120s
      resources:
        limits:
          memory: 250MB
          cpus: '1'
        reservations:
          memory: 50MB
          cpus: '0.10'
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 10
        window: 120s
      resources:
        limits:
          memory: 250MB
          cpus: '1'
        reservations:
          memory: 50MB
          cpus: '0.10'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    healthcheck:
      test: "wget -O - -T 5 -S http://localhost:9090/api/v1/status/runtimeinfo"
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - monitoring
    depends_on:
      - node-exporter
      - cadvisor
  mongodb-grafana-datasource-backend:
    build:
      context: ./grafana/mongodb-grafana-plugin/backend
      dockerfile: Dockerfile
    container_name: mongodb-grafana-datasource-backend
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 10
        window: 120s
      resources:
        limits:
          memory: 250MB
          cpus: '1'
        reservations:
          memory: 50MB
          cpus: '0.10'
    networks:
      - api_backbone
    ports:
      - 4000:4000
    extra_hosts:
      - "host.docker.internal:host-gateway"
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 10
        window: 120s
      resources:
        limits:
          memory: 250MB
          cpus: '1'
        reservations:
          memory: 50MB
          cpus: '0.10'
    environment:
      GF_INSTALL_PLUGINS: 'grafana-clock-panel,grafana-simple-json-datasource'
      GF_DEFAULT_APP_MODE: 'development'
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: 'mongodb-grafana-datasource'
      GF_USERS_ALLOW_SIGN_UP: false
      GF_SECURITY_ADMIN_USER:
      GF_SECURITY_ADMIN_PASSWORD:
    ports:
      - 3001:3000
    networks:
      - monitoring
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/mongodb-grafana-plugin/frontend/dist/:/var/lib/grafana/plugins/mongodb-grafana-datasource
    healthcheck:
      test: "wget -O - -T 5 -S http://localhost:3000/api/health"
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      prometheus:
        condition: service_healthy

volumes:
  prometheus_data:
  grafana_data:

networks:
  monitoring:
    driver: bridge
  api_backbone:
    external: true
